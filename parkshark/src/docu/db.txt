// TODO: sanitization, validation

Collections: Listings, Users, Bookings

Listings

//Assumptions:
//1. First person to make the booking will get the spot
//2. Availability is decided on whether there is a current
//3. All users are both renters and rentees
//4. User can't edit bookings after they are made

Case A:
Availability is a boolean. Renter sets either available or not. Typical available listing search would look like: 
1. Filter all listings with availability true
2. Perform intersection search to see if requested time interval intersects with existing bookings, filter the intersections


Case B:
1. Each listing has its own availability calendar (array of time intervals).
2. Each time a booking is made the availability calendar is updated
3. Simply filter to see if requested time interval intersects with existing bookings


// *************************
Note:
Does front-end need to look at ObjectIds?
How is HTTP request authenticated?

REST API
-Create: POST /users
-Read: GET /users?email=string 
-Read: GET /users/:id
-Update: PATCH /users/:id
-Delete: DELETE /users/:id

    > User wants to get renter bookings/host bookings/listings by ID

-Create: POST /listings
-Read: GET /listings?long=dec&lat=dec&host_id=string&price_lo=dec&price_hi=dec&starttime=t1&endtime=t2&limit=int&skip=int
-Read: GET /listings/:id
-Update: PATCH /listings/:id
-Delete: DELETE /listings/:id

-Create: POST /bookings?renter_id=string&listing_id=string&host_id=string&starttime=t1&endtime=t2
-Read: GET /bookings?renter_id=string&listing_id=string&host_id=string
-Read: GET /bookings/:id
-Update: PATCH /bookings/:id
-Delete: DELETE /bookings/:id

    > Creating a booking means updating host, renter and listing documents

* request contains headers and JSON data in request body